// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Microsoft.Marketplace.Metering.Models
{
    public partial class GetUsageEvent
    {
        internal static GetUsageEvent DeserializeGetUsageEvent(JsonElement element)
        {
            Optional<DateTimeOffset> usageDate = default;
            Optional<Guid> usageResourceId = default;
            Optional<string> dimension = default;
            Optional<string> planId = default;
            Optional<string> planName = default;
            Optional<string> offerId = default;
            Optional<string> offerName = default;
            Optional<string> offerType = default;
            Optional<Guid> azureSubscriptionId = default;
            Optional<ReconStatusEnum> reconStatus = default;
            Optional<double> submittedQuantity = default;
            Optional<double> processedQuantity = default;
            Optional<double> submittedCount = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("usageDate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    usageDate = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("usageResourceId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    usageResourceId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("dimension"))
                {
                    dimension = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("planId"))
                {
                    planId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("planName"))
                {
                    planName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("offerId"))
                {
                    offerId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("offerName"))
                {
                    offerName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("offerType"))
                {
                    offerType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("azureSubscriptionId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    azureSubscriptionId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("reconStatus"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    reconStatus = property.Value.GetString().ToReconStatusEnum();
                    continue;
                }
                if (property.NameEquals("submittedQuantity"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    submittedQuantity = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("processedQuantity"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    processedQuantity = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("submittedCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    submittedCount = property.Value.GetDouble();
                    continue;
                }
            }
            return new GetUsageEvent(Optional.ToNullable(usageDate), Optional.ToNullable(usageResourceId), dimension.Value, planId.Value, planName.Value, offerId.Value, offerName.Value, offerType.Value, Optional.ToNullable(azureSubscriptionId), Optional.ToNullable(reconStatus), Optional.ToNullable(submittedQuantity), Optional.ToNullable(processedQuantity), Optional.ToNullable(submittedCount));
        }
    }
}
